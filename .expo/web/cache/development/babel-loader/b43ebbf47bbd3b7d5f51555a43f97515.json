{"ast":null,"code":"import React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport { HomeScreen, SearchCityScreen, SearchCountryScreen, CityScreen, CountriesScreen } from \"./src/screens\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Stack = createNativeStackNavigator();\nexport default function App() {\n  return _jsx(NavigationContainer, {\n    children: _jsxs(Stack.Navigator, {\n      children: [_jsx(Stack.Screen, {\n        name: \"Home\",\n        component: HomeScreen\n      }), _jsx(Stack.Screen, {\n        name: \"SearchCity\",\n        component: SearchCityScreen\n      }), _jsx(Stack.Screen, {\n        name: \"SearchCountry\",\n        component: SearchCountryScreen\n      }), _jsx(Stack.Screen, {\n        name: \"City\",\n        component: CityScreen\n      }), _jsx(Stack.Screen, {\n        name: \"Countries\",\n        component: CountriesScreen\n      })]\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    flexDirection: \"column\",\n    paddingVertical: 30,\n    paddingHorizontal: 30,\n    backgroundColor: '#E7E7E7'\n  }\n});","map":{"version":3,"sources":["C:/Users/alire/Documents/Git/citypop/App.tsx"],"names":["React","NavigationContainer","createNativeStackNavigator","HomeScreen","SearchCityScreen","SearchCountryScreen","CityScreen","CountriesScreen","Stack","App","styles","StyleSheet","create","container","flex","flexDirection","paddingVertical","paddingHorizontal","backgroundColor"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SAASC,0BAAT,QAA2C,gCAA3C;AAEA,SAASC,UAAT,EAAqBC,gBAArB,EAAuCC,mBAAvC,EAA4DC,UAA5D,EAAwEC,eAAxE;;;AAEA,IAAMC,KAAK,GAAGN,0BAA0B,EAAxC;AAEA,eAAe,SAASO,GAAT,GAAe;AA2C1B,SACE,KAAC,mBAAD;AAAA,cACE,MAAC,KAAD,CAAO,SAAP;AAAA,iBACE,KAAC,KAAD,CAAO,MAAP;AAAc,QAAA,IAAI,EAAC,MAAnB;AAA0B,QAAA,SAAS,EAAEN;AAArC,QADF,EAEE,KAAC,KAAD,CAAO,MAAP;AAAc,QAAA,IAAI,EAAC,YAAnB;AAAgC,QAAA,SAAS,EAAEC;AAA3C,QAFF,EAGE,KAAC,KAAD,CAAO,MAAP;AAAc,QAAA,IAAI,EAAC,eAAnB;AAAmC,QAAA,SAAS,EAAEC;AAA9C,QAHF,EAIE,KAAC,KAAD,CAAO,MAAP;AAAc,QAAA,IAAI,EAAC,MAAnB;AAA0B,QAAA,SAAS,EAAEC;AAArC,QAJF,EAKE,KAAC,KAAD,CAAO,MAAP;AAAc,QAAA,IAAI,EAAC,WAAnB;AAA+B,QAAA,SAAS,EAAEC;AAA1C,QALF;AAAA;AADF,IADF;AAWD;AAGH,IAAMG,MAAM,GAAGC,UAAU,CAACC,MAAX,CAAkB;AAC/BC,EAAAA,SAAS,EAAE;AACPC,IAAAA,IAAI,EAAE,CADC;AAEPC,IAAAA,aAAa,EAAE,QAFR;AAGPC,IAAAA,eAAe,EAAE,EAHV;AAIPC,IAAAA,iBAAiB,EAAE,EAJZ;AAKPC,IAAAA,eAAe,EAAE;AALV;AADoB,CAAlB,CAAf","sourcesContent":["import React from 'react';\r\nimport { StyleSheet } from 'react-native';\r\nimport { NavigationContainer } from '@react-navigation/native';\r\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\r\nimport { RootStackParamList } from './src/constants/RootStack';\r\nimport { HomeScreen, SearchCityScreen, SearchCountryScreen, CityScreen, CountriesScreen} from './src/screens';\r\n\r\nconst Stack = createNativeStackNavigator<RootStackParamList>();\r\n\r\nexport default function App() {// extends React.Component{\r\n  // const [userData, setUserData] = useState<geonames[]>([]);\r\n  // console.clear();\r\n  // console.log('User Data: ', userData);\r\n  // useEffect(()=>{\r\n  //   axios\r\n  //     .get<geonames[]>('http://api.geonames.org/searchJSON?username=weknowit&q=London')\r\n  //     .then((response: AxiosResponse) => {\r\n  //       setUserData(response.data);\r\n  //     })\r\n\r\n  // }, []);\r\n//   constructor(props: {} | Readonly<{}>) {\r\n//     super(props);\r\n//     this.state = {\r\n//       isLoading: true,\r\n//       dataSource: null,\r\n//     }\r\n//   }\r\n\r\n  // componentDidMount () {\r\n  //   return fetch('http://api.geonames.org/searchJSON?username=weknowit')\r\n  //     .then((response) => response.json())\r\n  //     .then((responseJson) => {\r\n  //       this.setState({\r\n  //         isLoading: false,\r\n  //         dataSource: responseJson.geonames,\r\n  //       })\r\n  //     })\r\n  //     .catch((error) => {\r\n  //       console.log(error)\r\n  //     });\r\n  // }\r\n\r\n  // render(){\r\n\r\n    // if (this.state.isLoading  ) {\r\n    //   return (\r\n    //     <View style={styles.container}>\r\n    //       <ActivityIndicator />\r\n    //     </View>\r\n    //   )\r\n    // }\r\n    return (\r\n      <NavigationContainer>\r\n        <Stack.Navigator>\r\n          <Stack.Screen name=\"Home\" component={HomeScreen}/>\r\n          <Stack.Screen name=\"SearchCity\" component={SearchCityScreen}/>\r\n          <Stack.Screen name=\"SearchCountry\" component={SearchCountryScreen}/>\r\n          <Stack.Screen name=\"City\" component={CityScreen}/>\r\n          <Stack.Screen name=\"Countries\" component={CountriesScreen}/>\r\n        </Stack.Navigator>\r\n      </NavigationContainer>\r\n    );\r\n  }\r\n//}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n      flex: 1,\r\n      flexDirection: \"column\",\r\n      paddingVertical: 30,\r\n      paddingHorizontal: 30,\r\n      backgroundColor: '#E7E7E7',    \r\n  },\r\n});\r\n\r\n"]},"metadata":{},"sourceType":"module"}
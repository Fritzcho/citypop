{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useEffect, useState } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { ListItem } from 'react-native-elements';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default function CountriesScreen(_ref) {\n  var route = _ref.route,\n      navigation = _ref.navigation;\n\n  var _useState = useState(true),\n      _useState2 = _slicedToArray(_useState, 2),\n      isLoading = _useState2[0],\n      setLoading = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      geonames = _useState4[0],\n      setGeonames = _useState4[1];\n\n  var getMovies = function getMovies() {\n    var response, json;\n    return _regeneratorRuntime.async(function getMovies$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(fetch('https://reactnative.dev/movies.json'));\n\n          case 3:\n            response = _context.sent;\n            _context.next = 6;\n            return _regeneratorRuntime.awrap(response.json());\n\n          case 6:\n            json = _context.sent;\n            setGeonames(json.geonames);\n            _context.next = 13;\n            break;\n\n          case 10:\n            _context.prev = 10;\n            _context.t0 = _context[\"catch\"](0);\n            console.error(_context.t0);\n\n          case 13:\n            _context.prev = 13;\n            setLoading(false);\n            return _context.finish(13);\n\n          case 16:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 10, 13, 16]], Promise);\n  };\n\n  useEffect(function () {\n    getMovies();\n  }, []);\n\n  var renderItem = function renderItem(_ref2) {\n    var item = _ref2.item;\n    return _jsx(ListItem, {\n      name: item.name,\n      countryname: item.countryName\n    });\n  };\n\n  return _jsx(View, {\n    style: {\n      flex: 1,\n      padding: 24\n    },\n    children: _jsx(Text, {\n      children: \"Testar om vi hamnar h\\xE4r ist\\xE4llet\"\n    })\n  });\n}","map":{"version":3,"sources":["C:/Users/alire/Documents/Git/citypop/src/screens/CountriesScreen.tsx"],"names":["React","useEffect","useState","ListItem","CountriesScreen","route","navigation","isLoading","setLoading","geonames","setGeonames","getMovies","fetch","response","json","console","error","renderItem","item","name","countryName","flex","padding"],"mappings":";;AACA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;;;AAIA,SAASC,QAAT,QAAyB,uBAAzB;;AAEA,eAAe,SAASC,eAAT,OAAgE;AAAA,MAArCC,KAAqC,QAArCA,KAAqC;AAAA,MAA9BC,UAA8B,QAA9BA,UAA8B;;AAkB7E,kBAAgCJ,QAAQ,CAAC,IAAD,CAAxC;AAAA;AAAA,MAAOK,SAAP;AAAA,MAAkBC,UAAlB;;AACA,mBAAgCN,QAAQ,CAAC,EAAD,CAAxC;AAAA;AAAA,MAAOO,QAAP;AAAA,MAAiBC,WAAjB;;AAGA,MAAMC,SAAS,GAAG,SAAZA,SAAY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CAEUC,KAAK,CAAC,qCAAD,CAFf;;AAAA;AAERC,YAAAA,QAFQ;AAAA;AAAA,6CAGKA,QAAQ,CAACC,IAAT,EAHL;;AAAA;AAGRA,YAAAA,IAHQ;AAIdJ,YAAAA,WAAW,CAACI,IAAI,CAACL,QAAN,CAAX;AAJc;AAAA;;AAAA;AAAA;AAAA;AAMdM,YAAAA,OAAO,CAACC,KAAR;;AANc;AAAA;AAQdR,YAAAA,UAAU,CAAC,KAAD,CAAV;AARc;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAlB;;AAYAP,EAAAA,SAAS,CAAC,YAAM;AACdU,IAAAA,SAAS;AACV,GAFQ,EAEN,EAFM,CAAT;;AAKA,MAAMM,UAAoC,GAAG,SAAvCA,UAAuC;AAAA,QAAGC,IAAH,SAAGA,IAAH;AAAA,WAC3C,KAAC,QAAD;AAAU,MAAA,IAAI,EAAEA,IAAI,CAACC,IAArB;AAA2B,MAAA,WAAW,EAAED,IAAI,CAACE;AAA7C,MAD2C;AAAA,GAA7C;;AAIA,SACE,KAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAEC,MAAAA,IAAI,EAAE,CAAR;AAAWC,MAAAA,OAAO,EAAE;AAApB,KAAb;AAAA,cAUE,KAAC,IAAD;AAAA;AAAA;AAVF,IADF;AAcD","sourcesContent":["import axios, { AxiosResponse } from 'axios';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { ActivityIndicator, FlatList, ListRenderItem, Text, View, } from 'react-native';\r\nimport { geonames } from '../constants/Interfaces';\r\nimport { CountriesProps } from '../constants/RootStack';\r\nimport { ListItem } from 'react-native-elements';\r\n\r\nexport default function CountriesScreen({ route, navigation }: CountriesProps) {\r\n  // const [userData, setUserData] = useState<geonames[]>([]);\r\n  // console.clear();\r\n  // console.log('User Data: ', userData);\r\n  // useEffect(()=>{\r\n  // axios\r\n  //   .get<geonames[]>('http://api.geonames.org/searchJSON?username=weknowit&maxRows=3&q='+inputText)\r\n  //   .then((response: AxiosResponse) => {\r\n  //     setUserData(response.data);\r\n  //   })\r\n\r\n  // }, []);\r\n  // const {inputText} = route.params;\r\n  // return (  \r\n  //     <View>\r\n  //       <Text>{inputText}</Text>\r\n  //     </View>\r\n  // );\r\n  const [isLoading, setLoading] = useState(true);\r\n  const [geonames, setGeonames] = useState([]);\r\n\r\n\r\n  const getMovies = async () => {\r\n     try {\r\n      const response =  await fetch('https://reactnative.dev/movies.json');\r\n      const json = await response.json();\r\n      setGeonames(json.geonames);\r\n    } catch (error) {\r\n      console.error(error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    getMovies();\r\n  }, []);\r\n\r\n\r\n  const renderItem: ListRenderItem<geonames> = ({ item }) => (\r\n    <ListItem name={item.name} countryname={item.countryName} />\r\n  )\r\n\r\n  return (\r\n    <View style={{ flex: 1, padding: 24 }}>\r\n      {/* {isLoading ? <ActivityIndicator/> : (\r\n        <FlatList\r\n          data={geonames}\r\n          keyExtractor={({ id }, index) => id}\r\n          renderItem={({ item } ) => (\r\n            <Text>{item['title']}, {item['releaseYear']}, Testar om vi ens hamnar här</Text>\r\n          )}\r\n        />\r\n      )} */}\r\n      <Text>Testar om vi hamnar här istället</Text>\r\n    </View>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function CityScreen(_ref) {\n  var route = _ref.route,\n      navigation = _ref.navigation;\n\n  var _useState = useState(true),\n      _useState2 = _slicedToArray(_useState, 2),\n      isLoading = _useState2[0],\n      setLoading = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      geonames = _useState4[0],\n      setGeonames = _useState4[1];\n\n  return _jsx(View, {\n    children: _jsxs(View, {\n      children: [_jsx(Text, {\n        children: \"Population:\"\n      }), _jsx(Text, {\n        children: \"123\"\n      })]\n    })\n  });\n}","map":{"version":3,"sources":["C:/Users/alire/Documents/Git/cityPop/src/screens/CityScreen.tsx"],"names":["React","useState","CityScreen","route","navigation","isLoading","setLoading","geonames","setGeonames"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;;;AAIA,eAAe,SAASC,UAAT,OAA2D;AAAA,MAArCC,KAAqC,QAArCA,KAAqC;AAAA,MAA9BC,UAA8B,QAA9BA,UAA8B;;AACtE,kBAAgCH,QAAQ,CAAC,IAAD,CAAxC;AAAA;AAAA,MAAOI,SAAP;AAAA,MAAkBC,UAAlB;;AACA,mBAAgCL,QAAQ,CAAC,EAAD,CAAxC;AAAA;AAAA,MAAOM,QAAP;AAAA,MAAiBC,WAAjB;;AACA,SACE,KAAC,IAAD;AAAA,cACI,MAAC,IAAD;AAAA,iBACI,KAAC,IAAD;AAAA;AAAA,QADJ,EAEI,KAAC,IAAD;AAAA;AAAA,QAFJ;AAAA;AADJ,IADF;AAQH","sourcesContent":["import React, { useState } from 'react';\r\nimport { Text, View } from 'react-native';\r\nimport { CountriesProps } from '../constants/RootStack';\r\n\r\nexport default function CityScreen({ route, navigation }: CountriesProps) {\r\n    const [isLoading, setLoading] = useState(true);\r\n    const [geonames, setGeonames] = useState([]);\r\n    return (\r\n      <View>\r\n          <View>\r\n              <Text>Population:</Text>\r\n              <Text>123</Text>\r\n          </View>\r\n      </View>\r\n    );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useEffect, useState } from 'react';\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport { Header, NavigationButton } from \"../components\";\nimport axios from 'axios';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar searchHandler = function searchHandler() {};\n\nfunction fetchByString() {}\n\nexport default function SearchByCountry(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      userData = _useState2[0],\n      setUserData = _useState2[1];\n\n  console.clear();\n  console.log('User Data: ', userData);\n  useEffect(function () {\n    axios.get('http://api.geonames.org/searchJSON?username=weknowit&q=London').then(function (response) {\n      setUserData(response.data);\n    });\n  }, []);\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(View, {\n      style: styles.headerContainer,\n      children: _jsx(Header, {\n        content: \"Search by country\"\n      })\n    }), _jsxs(View, {\n      style: styles.innerContainer,\n      children: [_jsx(View, {\n        style: styles.btnContainer,\n        children: _jsx(TextInput, {\n          style: styles.input,\n          placeholder: \"Enter a country...\",\n          onChangeText: searchHandler\n        })\n      }), _jsxs(View, {\n        style: [styles.btnContainer, styles.button],\n        children: [_jsx(NavigationButton, {\n          content: \"Search\",\n          route: \"Countries\",\n          navigation: navigation\n        }), _jsx(Button, {\n          title: \"button\",\n          onPress: function onPress() {\n            var _useState3 = useState([]),\n                _useState4 = _slicedToArray(_useState3, 2),\n                userData = _useState4[0],\n                setUserData = _useState4[1];\n\n            console.clear();\n            console.log('User Data: ', userData);\n            useEffect(function () {\n              axios.get('http://api.geonames.org/searchJSON?username=weknowit&q=London').then(function (response) {\n                setUserData(response.data);\n              });\n            }, []);\n          }\n        })]\n      })]\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    flexDirection: 'column',\n    justifyContent: 'center',\n    alignContent: 'center'\n  },\n  headerContainer: {\n    flex: 1,\n    flexDirection: 'column'\n  },\n  innerContainer: {\n    flex: 2,\n    flexDirection: 'column'\n  },\n  btnContainer: {\n    padding: 40\n  },\n  input: {\n    padding: 10,\n    fontSize: 18,\n    backgroundColor: 'white',\n    borderColor: '#878787',\n    borderWidth: 2,\n    borderRadius: 30\n  },\n  button: {\n    paddingLeft: 130,\n    paddingRight: 130\n  }\n});","map":{"version":3,"sources":["C:/Users/alire/Documents/Git/citypop/src/screens/SearchByCountry.tsx"],"names":["React","useEffect","useState","Header","NavigationButton","axios","searchHandler","fetchByString","SearchByCountry","navigation","userData","setUserData","console","clear","log","get","then","response","data","styles","container","headerContainer","innerContainer","btnContainer","input","button","StyleSheet","create","flex","flexDirection","justifyContent","alignContent","padding","fontSize","backgroundColor","borderColor","borderWidth","borderRadius","paddingLeft","paddingRight"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { TextInput, View, StyleSheet, Button} from 'react-native';\r\nimport { Header, NavigationButton} from '../components';\r\nimport { StackRouter } from '../constants/StackRouter';\r\nimport { geonames } from '../constants/Interfaces';\r\nimport axios, { AxiosResponse } from 'axios';\r\n\r\nconst searchHandler = () => {\r\n}\r\n\r\nfunction fetchByString() {\r\n  \r\n}\r\n\r\nexport default function SearchByCountry({navigation}:StackRouter) {\r\n    const [userData, setUserData] = useState<geonames[]>([]);\r\n    console.clear();\r\n    console.log('User Data: ', userData);\r\n    useEffect(()=>{\r\n    axios\r\n      .get<geonames[]>('http://api.geonames.org/searchJSON?username=weknowit&q=London')\r\n      .then((response: AxiosResponse) => {\r\n        setUserData(response.data);\r\n      })\r\n\r\n    }, []);\r\n    return (\r\n      <View style={styles.container}>\r\n        <View style={styles.headerContainer}>\r\n          <Header content=\"Search by country\" />\r\n        </View>\r\n        <View style={styles.innerContainer}>\r\n          <View style={styles.btnContainer}>\r\n            <TextInput\r\n              style={styles.input}\r\n              placeholder='Enter a country...'\r\n              onChangeText={searchHandler}\r\n            />\r\n          </View>\r\n          <View style={[styles.btnContainer, styles.button]}>\r\n            <NavigationButton content='Search' route='Countries' navigation={navigation}/>\r\n            <Button \r\n              title='button'\r\n              onPress={() => \r\n                {const [userData, setUserData] = useState<geonames[]>([]);\r\n                  console.clear();\r\n                  console.log('User Data: ', userData);\r\n                  useEffect(()=>{\r\n                    axios\r\n                      .get<geonames[]>('http://api.geonames.org/searchJSON?username=weknowit&q=London')\r\n                      .then((response: AxiosResponse) => {\r\n                        setUserData(response.data);\r\n                      })\r\n                \r\n                  }, []);}\r\n              }\r\n            />\r\n            \r\n          </View>\r\n        </View>\r\n      </View>\r\n    );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex:1,\r\n    flexDirection: 'column',\r\n    justifyContent: 'center',\r\n    alignContent: 'center',\r\n  },\r\n  headerContainer: {\r\n    flex: 1,\r\n    flexDirection: 'column'\r\n  },\r\n  innerContainer: {\r\n    flex: 2,\r\n    flexDirection: 'column',\r\n  },\r\n  btnContainer: {\r\n    padding: 40,\r\n  },\r\n  input: {\r\n    padding: 10,\r\n    fontSize: 18,\r\n    backgroundColor: 'white',\r\n    borderColor:'#878787', \r\n    borderWidth: 2,\r\n    borderRadius: 30,\r\n  },\r\n  button: {\r\n    paddingLeft: 130,\r\n    paddingRight: 130,\r\n  },\r\n});"]},"metadata":{},"sourceType":"module"}
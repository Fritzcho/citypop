{"ast":null,"code":"export {};","map":{"version":3,"sources":[],"names":[],"mappings":"","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { \r\n  ActivityIndicator, \r\n  FlatList, \r\n  ListRenderItemInfo, \r\n  Text, \r\n  View } from 'react-native';\r\nimport { geonames } from '../constants/Interfaces';\r\nimport { CountriesProps } from '../constants/RootStack';\r\nimport { Header } from '../components'\r\n\r\n// export default function CountriesScreen({ route, navigation }: CountriesProps) {\r\n//   const [isLoading, setLoading] = useState(true);\r\n//   const [geonames, setGeonames] = useState([]);\r\n//   const [geo, setGeo] = useState<\r\n//     Array<{\r\n//       key: string,\r\n//       value: geonames, \r\n//     }>\r\n//   >([]);\r\n//   const {inputText} = route.params; \r\n\r\n//   const getGeo = async () => {\r\n//      try {\r\n//       const response =  await fetch(\r\n//         'http://api.geonames.org/searchJSON?username=weknowit&maxRows=10&q='\r\n//         +inputText);\r\n//       const json = await response.json();\r\n//       setGeonames(json.geonames);\r\n//       setGeo(json.geonames.map(function(item:geonames) {\r\n//         return {\r\n//           key: item.name,\r\n//           value: item,\r\n//         }\r\n//       }))\r\n//     } catch (error) {\r\n//       console.error(error);\r\n//     } finally {\r\n//       setLoading(false);\r\n//     }\r\n//   }\r\n\r\n//   useEffect(() => {\r\n//     getGeo();\r\n//   }, []);\r\n\r\n//   return (\r\n//     <View style={{ flex: 1, padding: 24 }}>\r\n//       <Header content={inputText}/>\r\n//       {/* {console.log(getCountryCode(geo[0].value))} */}\r\n\r\n//       {isLoading ? <ActivityIndicator/> : (\r\n//         <FlatList\r\n//           data={geonames}\r\n//           keyExtractor={( item: geonames) => item.name}\r\n//           renderItem={({ item }: ListRenderItemInfo<geonames>) => (\r\n//             <Text>{item.name}, {item.population}</Text>\r\n//           )}\r\n//         />\r\n//       )}\r\n//     </View>\r\n//   );\r\n// }\r\n"]},"metadata":{},"sourceType":"module"}